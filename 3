import json

def calcular_faturamento(dados):
    """
    Calcula e retorna o menor valor de faturamento, o maior valor de faturamento e
    o número de dias com faturamento acima da média.

    Args:
        dados (list): Uma lista de dicionários, onde cada dicionário representa um dia
                      de faturamento com as chaves "dia" e "valor".

    Returns:
        tuple: Um tupla contendo o menor valor de faturamento, o maior valor de
               faturamento e o número de dias com faturamento acima da média.
    """

    faturamentos_diarios = [dia["valor"] for dia in dados if dia["valor"] > 0]

    if not faturamentos_diarios:
        return 0, 0, 0  # Retorna valores padrão se não houver faturamento

    menor_faturamento = min(faturamentos_diarios)
    maior_faturamento = max(faturamentos_diarios)
    media_mensal = sum(faturamentos_diarios) / len(faturamentos_diarios)
    dias_acima_da_media = sum(1 for faturamento in faturamentos_diarios if faturamento > media_mensal)

    return menor_faturamento, maior_faturamento, dias_acima_da_media

# Exemplo de uso com dados de um arquivo JSON:
# Certifique-se de que o arquivo 'dados.json' esteja no mesmo diretório do seu script.
with open('dados.json', 'r') as arquivo_json:
    dados_faturamento = json.load(arquivo_json)

menor, maior, acima_da_media = calcular_faturamento(dados_faturamento)

print("Menor valor de faturamento:", menor)
print("Maior valor de faturamento:", maior)
print("Dias com faturamento acima da média:", acima_da_media)
